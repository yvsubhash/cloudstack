// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// Automatically generated by addcopyright.py at 01/29/2013
// Apache License, Version 2.0 (the "License"); you may not use this
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.wds.api;

import com.cloud.agent.api.Command;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Raghav on 8/13/2015.
 */
public class PrestageDeviceCommand extends Command {

    private List<String> hostMac;

    private String wdsClientUnattend;

    private String bootImagePath;

    private Map<String, String> additionalArguments = new LinkedHashMap<>(); // can be used later to pass additional args to wdsutil

    @Override
    public boolean executeInSequence() {
        return true;
    }

    public List<String> getHostMac() {
        return hostMac;
    }

    public void setHostMac(List<String> hostMac) {
        this.hostMac = hostMac;
    }

    public String getWdsClientUnattend() {
        return wdsClientUnattend;
    }

    public void setWdsClientUnattend(String wdsClientUnattend) {
        this.wdsClientUnattend = wdsClientUnattend;
    }

    public String getBootImagePath() {
        return bootImagePath;
    }

    public void setBootImagePath(String bootImagePath) {
        this.bootImagePath = bootImagePath;
    }

    public Map<String, String> getAdditionalArguments() {
        return additionalArguments;
    }
}